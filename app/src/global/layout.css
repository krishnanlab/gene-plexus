/** half content-width column */

.narrow {
  max-width: calc(var(--content) / 2) !important;
}

/** full width */

.full {
  width: 100%;
}

/** basic commonly-needed horizontal or vertical flex */
/** if customization needed, use local class from scratch */

.flex-row,
.flex-col {
  display: flex;
  align-items: center;
  justify-content: center;
  max-width: 100%;
}

.flex-row {
  flex-wrap: wrap;
}

.flex-col {
  flex-direction: column;
}

/** basic auto-filled grid with max number of columns */
/** if customization needed, use local class from scratch */

.grid {
  --cols: 2;
  --cell: min(100%, calc(var(--content) / var(--cols) - 100px));
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(var(--cell), 1fr));
  gap: 40px;
}

/** adjust max number of grid columns */

.cols-3 {
  --cols: 3;
}

.cols-4 {
  --cols: 4;
}

/** set spacing of flex or grid */

.gap-xs {
  gap: 5px 10px;
}

.gap-sm {
  gap: 10px 20px;
}

.gap-md {
  gap: 20px 40px;
}

.gap-lg {
  gap: 40px 60px;
}

/** let flex/grid gap handle spacing of children */

:is(.flex-row, .flex-col, .grid) > * {
  margin: 0;
}

/** simple two-col auto-sized table of key/value pairs */

.mini-table {
  display: grid;
  grid-template-columns: auto auto;
  align-items: center;
  gap: 5px 15px;
  text-align: left;
}

.mini-table :nth-child(odd) {
  color: var(--dark-gray);
  font-weight: var(--bold);
}

/** icon sizing and positioning */

.icon,
.inline-icon {
  flex-shrink: 0;
  width: unset;
  height: 1em;
  overflow: visible;
}

.inline-icon {
  position: relative;
  top: -0.075em;
  vertical-align: middle;
}

/** blank box for dev or loading placeholder */

.placeholder {
  aspect-ratio: 3 / 1;
  width: 100%;
  border-radius: var(--rounded);
  background: var(--light-gray);
}
